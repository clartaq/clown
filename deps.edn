{:deps    {org.clojure/clojure         {:mvn/version "1.10.1"}
           org.clojure/clojurescript   {:mvn/version "1.10.773"}
           org.clojure/core.async      {:mvn/version "1.2.603"}
           org.clojure/java.classpath  {:mvn/version "1.0.0"}
           org.clojure/java.jdbc       {:mvn/version "0.7.11"}
           com.andrewmcveigh/cljs-time {:mvn/version "0.5.2"}
           com.h2database/h2           {:mvn/version "1.4.200"}
           ;; This version of timbre is not out of alpha yet, but it stops so
           ;; many other warnings that I'm trying it out here for now.
           com.taoensso/timbre         {:mvn/version "4.11.0-alpha1"}
           compojure                   {:mvn/version "1.6.1"}
           http-kit                    {:mvn/version "2.3.0"}
           reagent                     {:mvn/version "0.10.0"}
           ring/ring-core              {:mvn/version "1.8.1"}
           ring/ring-devel             {:mvn/version "1.8.1"}}

 :paths   ["src" "resources"]

 ;; Aliases for common commands.
 :aliases {;; Get the figwheel  deps used in multiple commands.
           :fig       {:extra-deps  {com.bhauman/rebel-readline-cljs {:mvn/version "0.1.4"}
                                     com.bhauman/figwheel-main       {:mvn/version "0.2.9"}}
                       :extra-paths ["target" "test"]}

           ;; Clojure unit testing.
           :test-clj  {:extra-paths ["test"]
                       :extra-deps  {lambdaisland/kaocha {:mvn/version "1.0.632"}}
                       :main-opts   ["-m" "kaocha.runner"]}

           ;; ClojureScript unit testing.
           :test-cljs {:main-opts ["-m" "figwheel.main" "-co" "test.cljs.edn" "-m" "clown.client.test-runner"]}

           ;; Clean (erase) all of the output artifacts.
           :clean     {:main-opts ["scripts/clean.clj"]}

           ;; Find out of date dependencies.
           :ancient   {:extra-deps {olical/depot {:mvn/version "2.0.1"}}
                       :main-opts  ["-m" "depot.outdated.main" "--every"]}

           ;; Start up a development environment.
           :dev       {:main-opts ["scripts/dev.clj"]}

           ;; Start up a development build with a ClojureScript REPL.
           :repl      {:main-opts ["scripts/repl.clj"]}

           ;; Build an uberjar.
           :prod      {:extra-deps {leiningen {:mvn/version "2.9.3"}}
                       :main-opts  ["scripts/prod.clj"]}}}
